variables:
  GOPATH: "$(system.defaultWorkingDirectory)/gopath" # Go workspace path
  GOBIN: "$(GOPATH)/bin/" # Go binaries path
  GHPAGES: "tda/gh-pages"
  GHPAGESURL: "https://capgemini.github.io/microsoft-team-labs"

trigger:
  branches:
    include:
      - main

pool:
  vmImage: "ubuntu-latest"

steps:
  - checkout: self
    persistCredentials: true

  - task: GoTool@0
    displayName: "Use latest Go "
    inputs:
      version: "1.16.3"

  - task: Go@0
    displayName: "Get CLAAT"
    inputs:
      command: "custom"
      customCommand: "install"
      arguments: "github.com/googlecodelabs/tools/claat@latest"
    
  - task: Npm@1
    inputs:
      command: 'install'

  - task: CmdLine@2
    displayName: "Compile markdown files"
    inputs:
      script: npx gulp codelabs:export --codelabs-dir=./codelabs-rendered --source=./codelabs/*.md

  - task: CmdLine@2
    displayName: "Build site"
    inputs:
      script: npx gulp dist --codelabs-dir=./codelabs-rendered --base-url $(GHPAGESURL)

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(system.defaultWorkingDirectory)/dist"
      Contents: "**"
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      OverWrite: true

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(system.defaultWorkingDirectory)/codelabs-rendered"
      Contents: "**"
      TargetFolder: "$(Build.ArtifactStagingDirectory)/codelabs"
      OverWrite: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "site"
      publishLocation: "Container"

  - script: |
      echo "commit all changes"
      git config --global user.email "$(Build.RequestedForEmail)"
      git config --global user.name "$(Build.RequestedFor)"
      git checkout -b $(GHPAGES) --track origin/$(GHPAGES)
      displayName: "checkout the target branch"
    displayName: "Checkout to $(GHPAGES)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.ArtifactStagingDirectory)"
      Contents: "**"
      TargetFolder: "$(system.defaultWorkingDirectory)"
      OverWrite: true

  - script: |
      git add -A
      git commit -m "$(Build.SourceVersionMessage)"
      git push --force --set-upstream origin $(GHPAGES)
    displayName: "Commit/Push changes to target Branch"
