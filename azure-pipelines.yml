variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GHPAGES: 'gh-pages'

trigger: none

pool:
  vmImage: 'ubuntu-latest'
  
steps:
- checkout: self
  persistCredentials: true
  
- task: GoTool@0
  displayName: 'Use latest Go '
  inputs:
    version: '1.16.3'

- task: Go@0
  displayName: 'Get CLAAT'
  inputs:    
    command: 'custom'
    customCommand: 'install'
    arguments: 'github.com/googlecodelabs/tools/claat@latest'

- task: CmdLine@2
  displayName: 'Compile markdown files'
  inputs:
    script: |
      mkdir codelabs
      cd codelabs
      for value in ../ALM ../SpecFlow
      do
        echo "Finding files in ${value}"
        fd=$(basename "$value")
        echo "Creating a folder ${fd}"
        mkdir $fd
        cd $fd
        for i in `find ../../$fd -name "*.md" -type f`; 
        do
          echo "$i"
          $(GOBIN)/claat export "$i"
        done
        cd ..
      done

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultWorkingDirectory)/codelabs'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'codelabs'
    publishLocation: 'Container'

- task: DeleteFiles@1
  inputs:
    SourceFolder: './codelabs'
    Contents: '**'
    RemoveSourceFolder: true

- script: |
    echo "commit all changes"
    git config --global user.email "$(Build.RequestedForEmail)"
    git config --global user.name "$(Build.RequestedFor)"
    git checkout -b $(GHPAGES) --track origin/$(GHPAGES)
  displayName: 'checkout the target branch'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)'
    Contents: '**'
    TargetFolder: '$(system.defaultWorkingDirectory)'
    OverWrite: true

- script: |
    git add -A
    git commit -m "Azure Pipeline Release"
    git push --force --set-upstream origin $(GHPAGES)
  displayName: 'Commit/Push changes to target Branch'

